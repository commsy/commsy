# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: '%env(LOCALE)%'

    commsy.elastic.prefix: '%env(ELASTIC_INDEX)%'

    commsy.force_theme: '%env(FORCE_THEME)%'

    files_directory: '%kernel.project_dir%/files'
    themes_directory: '%kernel.project_dir%/public/css/themes'

    router.request_context.host: "%env(HOST)%"
    router.request_context.scheme: "%env(SCHEME)%"

    # Autosaving
    commsy.autosave.mode: 0         # possible modes: 0 -> unvisible, 1 -> verbose / silent, 2 -> verbose / counter
    commsy.autosave.limit: 6        # limit in minutes

    # Use virus scanning at uploading files
    # ----------------------------------------------------
    # OPTION 1: there are performance lacks
    # scan file on upload
    # 1. installation
    #    on debian linux
    #    # apt-get install php5-clamavlib
    #    maybe you must edit /etc/php5/apache2/php.ini to active the clamavlib
    #    # /etc/init.d/apache2 restart
    # 2. enable virus scan at uploading files
    #    virus_scan = true;
    # 3. enable virus scan by php clamav library
    #    virus_use_php = true;
    #
    # if you want to use another viren scanning tool
    # you must set the following variables
    # - only testet with clamav on linux
    #    virus_scan = true;
    #    virus_use_php = false;
    #    virus_scan_path = '/usr/bin';
    #    virus_scan_bin  = 'clamscan';
    # ----------------------------------------------------
    # OPTION 2: scan files with commsy cron
    # scan files every 24 hours
    # 1. installation
    #    on debian linux
    #    # apt-get install php5-clamavlib
    #    maybe you must edit /etc/php5/apache2/php.ini to active the clamavlib
    #    # /etc/init.d/apache2 restart
    # 2. enable virus scan at uploading files
    #    virus_scan_cron = true;
    # 3. enable virus scan by php clamav library
    #    virus_use_php = true;
    #
    # if you want to use another viren scanning tool
    # you must set the following variables
    # - only testet with clamav on linux
    #    virus_scan_cron = true;
    #    virus_use_php = false;
    #    virus_scan_path = '/usr/bin';
    #    virus_scan_bin  = 'clamscan';
    commsy.clamscan.virus_scan: false
    commsy.clamscan.virus_use_php: false
    commsy.clamscan.virus_scan_cron: false
    commsy.clamscan.virus_scan_path: '/usr/bin'
    commsy.clamscan.virus_scan_bin: 'clamscan'

    # Cookie management
    commsy.cookie.domain: ~
    commsy.cookie.path: ~

    # Database
    commsy.db.backup_prefix: 'zzz'

    # E-Mail
    commsy.email.from: '%env(EMAIL_FROM)%'

    # E-Mail Upload
    commsy.upload.enabled: '%env(bool:EMAIL_UPLOAD_ENABLED)%'
    commsy.upload.server: '%env(EMAIL_UPLOAD_SERVER)%'
    commsy.upload.port: '%env(EMAIL_UPLOAD_PORT)%'
    commsy.upload.options: '%env(EMAIL_UPLOAD_OPTIONS)%'
    commsy.upload.account: '%env(EMAIL_UPLOAD_ACCOUNT)%'
    commsy.upload.password: '%env(EMAIL_UPLOAD_PASSWORD)%'

    # Login
    commsy.login.shibboleth_direct_login: false
    commsy.login.shibboleth_redirect_url: ''
    commsy.login.shibboleth_deactivate_direct_login_by_portal_id: ''

    # Security / Data Privacy
    # Overwrite entries with "overwritten because of data security" when deleting a user
    # default = false
    # do nothing = true
    # set flag = flag
    commsy.security.privacy_disable_overwriting: '%env(uppercase:DATA_PRIVACY_OVERWRITING)%'
    commsy.security.allow_moderator_takeover: true      # allows all moderators to take over another user by default

    # Settings
    commsy.settings.export_temp_folder: 'var/temp/zip_export'       # Where to store the temporary export files
    commsy.settings.delete_days: 182        # Delete entries in database marked as deleted delete_days old
    commsy.settings.session_lifetime: 6     # Session lifetime in hours
    commsy.settings.proxy_ip: '%env(PROXY_IP)%'      # Proxy Ip
    commsy.settings.proxy_port: '%env(PROXY_PORT)%'      # Propxy Port
    commsy.settings.single_cat_selection: false     # Single selection for categories
    commsy.settings.item_locking: true     # Temporary protect items from beeing edited by different users simultaneously

    # Wordpress
    commsy.wordpress.enabled: false     # For activating wordpress please set the following variable on true

    # Limesurvey
    commsy.limesurvey.enabled: false        # et the following variable to activate limesurvey extension

    # Etherpad
    commsy.etherpad.enabled: '%env(bool:ETHERPAD_ENABLED)%'
    commsy.etherpad.api_key: '%env(ETHERPAD_API_KEY)%'
    commsy.etherpad.api_url: '%env(ETHERPAD_API_URL)%'
    commsy.etherpad.base_url: '%env(ETHERPAD_BASE_URL)%'

    # Dates
    commsy.dates.timezone: '%env(TIMEZONE)%'
    craue_twig_extensions.formatDateTime.datetype: medium
    craue_twig_extensions.formatDateTime.timetype: short

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true
        #public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DataFixtures/'
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Event/'
            - '../src/Form/Model/'
            - '../src/Kernel.php'
            - '../src/Mail/Messages/'
            - '../src/Model/'
            - '../src/Proxy/'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\DataFixtures\AppFixtures:
        autowire: false
        autoconfigure: false
        tags:
            - 'doctrine.fixture.orm'

    _instanceof:
        App\Form\DataTransformer\DataTransformerInterface:
            tags: ['app.data_transformer']
        App\Cron\Tasks\CronTaskInterface:
            tags: ['app.cron_task']
        App\Database\DatabaseCheck:
            tags: ['app.database.check']

    # Event subscriber
    App\EventSubscriber\KernelSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    # Environment Variable Processors
    App\DependencyInjection\UppercasingEnvVarProcessor:
        tags: ['container.env_var_processor']

    # Legacy Environment
    commsy_legacy.environment:
        alias: App\Services\LegacyEnvironment

    App\Services\LegacyEnvironment:
        public: true
        autowire: true
        arguments: ['%kernel.project_dir%', '@service_container']

    commsy_legacy.category_service:
        alias: App\Utils\CategoryService

    App\Utils\CategoryService:
        autowire: true
        arguments: ['@commsy_legacy.environment']

    commsy_legacy.room_service:
        alias: App\Utils\RoomService

    App\Utils\RoomService:
        autowire: true

    commsy_legacy.user_service:
        alias: App\Utils\UserService

    App\Utils\UserService:
        autowire: true

    commsy_legacy.item_service:
        alias: App\Utils\ItemService

    App\Utils\ItemService:
        autowire: true

    # Filter types
    commsy.filter.rubric:
        class: App\Filter\RubricFilterType
        arguments: ['@commsy_legacy.room_service', '@request_stack']
        tags:
            - { name: form.type }

    commsy.filter.hashtag:
        class: App\Filter\HashTagFilterType
        arguments: ['@request_stack', '@commsy_legacy.room_service']
        tags:
            - { name: form.type }

    commsy.filter.category:
        class: App\Filter\CategoryFilterType
        arguments: ['@request_stack', '@commsy_legacy.category_service', '@commsy_legacy.room_service']
        tags:
            - { name: form.type }

    commsy.filter.participant:
        class: App\Filter\ParticipantFilterType
        arguments: ['@request_stack', '@commsy_legacy.user_service']
        tags:
            - { name: form.type }

    commsy.filter.calendar:
        class: App\Filter\CalendarFilterType
        arguments: ['@request_stack', '@commsy.calendars_service']
        tags:
            - { name: form.type }

    # Menu
    commsy.menu.builder:
        class: App\Menu\MenuBuilder
        arguments:
            $factory: '@knp_menu.factory'

    commsy.menu.main:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory: ['@commsy.menu.builder', createMainMenu]
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: main } # The alias is what is used to retrieve the menu

    commsy.menu.settings:
        class: Knp\Menu\MenuItem
        factory: ['@commsy.menu.builder', createSettingsMenu]
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: settings }

    commsy.menu.portal_settings:
        class: Knp\Menu\MenuItem
        factory: ['@commsy.menu.builder', createPortalSettingsMenu]
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: portal_settings }

    commsy.menu.account:
        class: Knp\Menu\MenuItem
        factory: ['@commsy.menu.builder', createAccountMenu]
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: account }

    commsy.menu.profile:
        class: Knp\Menu\MenuItem
        factory: ['@commsy.menu.builder', createProfileMenu]
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: profile }

    commsy.menu.voter.request:
        class: App\Menu\Voter\CommsyVoter
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.voter }

    # Voter
    commsy.security.category_voter:
        class: App\Security\Authorization\Voter\CategoryVoter
        arguments: ['@commsy_legacy.environment']
        public: false
        tags:
            - { name: security.voter }

    commsy.security.hashtag_voter:
        class: App\Security\Authorization\Voter\HashtagVoter
        arguments: ['@commsy_legacy.environment']
        public: false
        tags:
            - { name: security.voter }

    commsy.security.item_voter:
        class: App\Security\Authorization\Voter\ItemVoter
        arguments: ['@commsy_legacy.environment', '@commsy_legacy.item_service', '@commsy_legacy.room_service', '@commsy_legacy.user_service', '@request_stack']
        public: false
        tags:
            - { name: security.voter }

    commsy.security.user_voter:
        class: App\Security\Authorization\Voter\UserVoter
        arguments: ['@commsy_legacy.environment', '@commsy_legacy.user_service', '@commsy_legacy.room_service']
        public: false
        tags:
            - { name: security.voter }

    commsy.security.calendars_voter:
        class: App\Security\Authorization\Voter\CalendarsVoter
        arguments: ['@commsy_legacy.environment']
        public: false
        tags:
            - { name: security.voter }

    commsy.security.rubric_voter:
        class: App\Security\Authorization\Voter\RubricVoter
        arguments: ['@commsy_legacy.environment']
        public: false
        tags:
            - { name: security.voter }

    App\Security\Authorization\Voter\FileVoter:
        autowire: true
        autoconfigure: true

    # EventListener
    commsy.listener.get_room_membership_filter:
        class: App\EventListener\RoomMembershipFilterConditionListener
        arguments: ['@commsy_legacy.user_service']
        tags:
            - { name: kernel.event_listener, event: lexik_form_filter.apply.orm.room_filter.membership , method: onGetFilterCondition }

    commsy.listener.get_room_time_pulses_filter:
        class: App\EventListener\RoomTimePulsesFilterConditionListener
        arguments: ['@commsy_legacy.room_service']
        tags:
            - { name: kernel.event_listener, event: lexik_form_filter.apply.orm.room_filter.timePulses , method: onGetFilterCondition }

    commsy.listener.command_error:
        class: App\EventListener\ConsoleErrorListener
        arguments: ['@logger']
        tags:
            - { name: kernel.event_listener, event: console.terminate }

    commsy.listener.command_exception:
        class: App\EventListener\ConsoleExceptionListener
        arguments: ['@logger']
        tags:
            - { name: kernel.event_listener, event: console.exception }

    commsy.etherpad_form_listener:
        class: App\Form\Type\Event\AddEtherpadFormListener
        arguments: ["@service_container"]
        tags:
            - { name: form.event_subscriber }

    # EventSubscribers
    commsy.subscriber.edit:
        class: App\EventSubscriber\CommsyEditSubscriber
        arguments: ["@service_container"]
        tags:
            - { name: kernel.event_subscriber }

    # Search
    commsy.search.manager:
        alias: App\Search\SearchManager

    App\Form\DataTransformer\TransformerManager:
        class: App\Form\DataTransformer\TransformerManager
        arguments:
            - !tagged 'app.data_transformer'

    App\Cron\CronManager:
        class: App\Cron\CronManager
        arguments:
            $projectDir: '%kernel.project_dir%'
            $cronTasks: !tagged_iterator app.cron_task

    App\Search\SearchManager:
        autowire: false
        arguments:
            $commsyFinder: '@FOS\ElasticaBundle\Finder\TransformedFinder'
            $userService: '@App\Utils\UserService'
            $itemService: '@App\Utils\ItemService'

    App\Search\MultiIndex:
        arguments:
            $client: '@fos_elastica.client.default'
            $name: 'commsy'
        calls:
            - [addIndices, [[
                 '@fos_elastica.index.commsy_announcement',
                 '@fos_elastica.index.commsy_date',
                 '@fos_elastica.index.commsy_discussion',
                 '@fos_elastica.index.commsy_label',
                 '@fos_elastica.index.commsy_user',
                 '@fos_elastica.index.commsy_room',
                 '@fos_elastica.index.commsy_todo',
                 '@fos_elastica.index.commsy_material',
            ]]]

    Elastica\SearchableInterface: '@App\Search\MultiIndex'

    App\Search\Transformer\ElasticaToModelTransformerCollection:
        arguments:
            - {
                announcement: '@fos_elastica.elastica_to_model_transformer.commsy_announcement',
                date: '@fos_elastica.elastica_to_model_transformer.commsy_date',
                discussion: '@fos_elastica.elastica_to_model_transformer.commsy_discussion',
                label: '@fos_elastica.elastica_to_model_transformer.commsy_label',
                room: '@fos_elastica.elastica_to_model_transformer.commsy_room',
                todo: '@fos_elastica.elastica_to_model_transformer.commsy_todo',
                user: '@fos_elastica.elastica_to_model_transformer.commsy_user',
                material: '@fos_elastica.elastica_to_model_transformer.commsy_material',
            }
    FOS\ElasticaBundle\Transformer\ElasticaToModelTransformerInterface: '@App\Search\Transformer\ElasticaToModelTransformerCollection'

    FOS\ElasticaBundle\Finder\TransformedFinder: ~
    FOS\ElasticaBundle\Finder\PaginatedFinderInterface: '@FOS\ElasticaBundle\Finder\TransformedFinder'

    app.elastica.object_persister.commsy_announcement:
        alias: 'fos_elastica.object_persister.commsy_announcement'
        public: true

    app.elastica.object_persister.commsy_date:
        alias: 'fos_elastica.object_persister.commsy_date'
        public: true

    app.elastica.object_persister.commsy_discussion:
        alias: 'fos_elastica.object_persister.commsy_discussion'
        public: true

    app.elastica.object_persister.commsy_label:
        alias: 'fos_elastica.object_persister.commsy_label'
        public: true

    app.elastica.object_persister.commsy_room:
        alias: 'fos_elastica.object_persister.commsy_room'
        public: true

    app.elastica.object_persister.commsy_todo:
        alias: 'fos_elastica.object_persister.commsy_todo'
        public: true

    app.elastica.object_persister.commsy_user:
        alias: 'fos_elastica.object_persister.commsy_user'
        public: true

    app.elastica.object_persister.commsy_material:
        alias: 'fos_elastica.object_persister.commsy_material'
        public: true

    FOS\ElasticaBundle\Persister\AsyncPagerPersister:
        arguments:
            - '@fos_elastica.pager_persister_registry'
            - '@fos_elastica.pager_provider_registry'
            # In the bundle this messagebus is different, but we should pass official Symfony bus.
            - '@Symfony\Component\Messenger\MessageBusInterface'
        tags:
            - { name: "fos_elastica.pager_persister", persisterName: "async" }

    FOS\ElasticaBundle\Message\Handler\AsyncPersistPageHandler:
        tags: [ messenger.message_handler ]

    commsy.search.indexable_checker:
        alias: App\Search\IndexableChecker

    # Validator
    commsy.validator.unique_label_name:
        class: App\Validator\Constraints\UniqueLabelNameValidator
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: validator.constraint_validator, alias: alias_name }

    commsy.validator.send_recipients_constraint:
        class: App\Validator\Constraints\SendRecipientsConstraintValidator
        arguments: ['@commsy_legacy.environment']
        tags:
            - { name: validator.constraint_validator, alias: alias_name }

    commsy.validator.home_notice_constraint:
        class: App\Validator\Constraints\HomeNoticeConstraintValidator
        arguments: ['@service_container', '@translator']
        tags:
            - { name: validator.constraint_validator, alias: alias_name }

    App\Validator\Constraints\UniquePortfolioCategoryValidator:
        autowire: true
        autoconfigure: true

    # Form types
    App\Form\Type\ExtensionSettingsType:
        tags:
            - { name: form.type }

    commsy.form.type.material:
        class: App\Form\Type\MaterialType
        arguments: ['@commsy.etherpad_form_listener']
        tags:
            - { name: form.type }

    # Controller
    commsy.item_controller:
        class: App\Controller\ItemController

    # Mail
    App\Mail\MessageBuilder:
        arguments:
            $emailFrom: '%commsy.email.from%'

    # Privacy
    App\Privacy\PersonalDataCollector:
        autowire: true
        autoconfigure: true

    # Utils
    App\Utils\MailAssistant:
        arguments:
            $twig: '@twig'

    # Commands
    App\Command\EmailUploadCommand:
        arguments:
            $projectDir: '%kernel.project_dir%'
            $uploadEnabled: '%commsy.upload.enabled%'
            $uploadServer: '%commsy.upload.server%'
            $uploadPort: '%commsy.upload.port%'
            $uploadOptions: '%commsy.upload.options%'
            $uploadAccount: '%commsy.upload.account%'
            $uploadPassword: '%commsy.upload.password%'

    # Database checks
    App\Database\DatabaseChecks:
        arguments:
            $databaseChecks: !tagged_iterator app.database.check

    # Feed
    debril.rss_atom.provider:
        class: App\Feed\CommsyFeedContentProvider
        arguments:
            - '@commsy_legacy.environment'
            - '@translator'
            - '@commsy.feed.creator_factory'

    commsy.feed.creator_factory:
        class: App\Feed\FeedCreatorFactory
        arguments: ['@commsy_legacy.item_service', '@commsy_legacy.environment', '@translator', '@router']
        calls:
            - [addCreator, ['@commsy.feed.creator.material']]
            - [addCreator, ['@commsy.feed.creator.section']]
            - [addCreator, ['@commsy.feed.creator.annotation']]
            - [addCreator, ['@commsy.feed.creator.group']]
            - [addCreator, ['@commsy.feed.creator.institution']]
            - [addCreator, ['@commsy.feed.creator.topic']]
            - [addCreator, ['@commsy.feed.creator.date']]
            - [addCreator, ['@commsy.feed.creator.user']]
            - [addCreator, ['@commsy.feed.creator.announcement']]
            - [addCreator, ['@commsy.feed.creator.todo']]
            - [addCreator, ['@commsy.feed.creator.step']]
            - [addCreator, ['@commsy.feed.creator.discussion']]
            - [addCreator, ['@commsy.feed.creator.discussion_article']]

    commsy.feed.creator.material:
        class: App\Feed\Creators\MaterialCreator

    commsy.feed.creator.section:
        class: App\Feed\Creators\SectionCreator

    commsy.feed.creator.annotation:
        class: App\Feed\Creators\AnnotationCreator

    commsy.feed.creator.group:
        class: App\Feed\Creators\GroupCreator

    commsy.feed.creator.institution:
        class: App\Feed\Creators\InstitutionCreator

    commsy.feed.creator.topic:
        class: App\Feed\Creators\TopicCreator

    commsy.feed.creator.date:
        class: App\Feed\Creators\DateCreator

    commsy.feed.creator.user:
        class: App\Feed\Creators\UserCreator

    commsy.feed.creator.announcement:
        class: App\Feed\Creators\AnnouncementCreator

    commsy.feed.creator.todo:
        class: App\Feed\Creators\TodoCreator

    commsy.feed.creator.step:
        class: App\Feed\Creators\StepCreator

    commsy.feed.creator.discussion:
        class: App\Feed\Creators\DiscussionCreator

    commsy.feed.creator.discussion_article:
        class: App\Feed\Creators\DiscussionArticleCreator

    # Monolog
    commsy.monolog.handler.doctrine_orm:
        class: App\Monolog\Handler\DoctrineORMHandler
        arguments: ['@doctrine.orm.entity_manager']

    # Services
    commsy.avatar_service:
        alias: App\Services\AvatarService

    App\Services\AvatarService:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'

    App\Services\PrintService:
        arguments:
            $pdf: '@knp_snappy.pdf'
            $proxyIp: '%commsy.settings.proxy_ip%'
            $proxyPort: '%commsy.settings.proxy_port%'

    commsy.copy_service:
        alias: App\Services\CopyService

    App\Services\CopyService:
        autowire: true

    commsy.calendars_service:
        class: App\Services\CalendarsService

    commsy.roomcategories_service:
        class: App\Services\RoomCategoriesService
        arguments: ['@doctrine.orm.entity_manager', '@service_container']

    commsy.room_feed_generator:
        class: App\RoomFeed\RoomFeedGenerator
        public: true
        arguments:
            - '@commsy_legacy.environment'
            - '@commsy_legacy.room_service'
            - '@commsy_legacy.item_service'

    # actions

    App\Action\MarkRead\MarkReadGeneric:
        autowire: true
    App\Action\MarkRead\MarkReadMaterial:
        autowire: true
    App\Action\MarkRead\MarkReadTodo:
        autowire: true

    commsy.action.mark_read.generic:
        class: App\Action\MarkRead\MarkReadAction
        autowire: true
        arguments:
            $markReadStrategy: '@App\Action\MarkRead\MarkReadGeneric'


    App\Action\MarkRead\MarkReadAction: '@commsy.action.mark_read.generic'

    App\Action\Copy\CopyAction:
        autowire: true

    App\Action\Copy\InsertAction:
        autowire: true

    App\Action\Copy\RemoveAction:
        autowire: true

    App\Action\Download\DownloadAction:
        autowire: true

    App\Action\TodoStatus\TodoStatusAction:
        autowire: true

    App\Action\UserStatus\UserStatusAction:
        autowire: true

    App\Action\Delete\DeleteGeneric:
        autowire: true
    App\Action\Delete\DeleteStep:
        autowire: true
    App\Action\Delete\DeleteSection:
        autowire: true
    App\Action\Delete\DeleteDiscussionArticle:
        autowire: true
    App\Action\Delete\DeleteDate:
        autowire: true


    commsy.action.delete.generic:
        class: App\Action\Delete\DeleteAction
        autowire: true


    commsy.action.delete.step:
        class: App\Action\Delete\DeleteAction
        autowire: true

    commsy.action.delete.section:
        class: App\Action\Delete\DeleteAction
        autowire: true

    commsy.action.delete.discussion_article:
        class: App\Action\Delete\DeleteAction
        autowire: true

    commsy.action.delete.date:
        class: App\Action\Delete\DeleteAction
        autowire: true

    commsy.action.delete.material:
        class: App\Action\Delete\DeleteAction
        autowire: true

    App\Action\Delete\DeleteAction: '@commsy.action.delete.generic'

    # Response
    App\Http\JsonDataResponse:
        autowire: false

    App\Http\JsonErrorResponse:
        autowire: false

    App\Http\JsonHTMLResponse:
        autowire: false

    App\Http\JsonRedirectResponse:
        autowire: false

    # SessionHandler
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'

    # FormatDateTimeExtension
    Craue\TwigExtensionsBundle\Twig\Extension\FormatDateTimeExtension:
        alias: twig.extension.craue_formatDateTime

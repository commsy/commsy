name: CI

on:
    workflow_dispatch:
    push:
        branches:
            - '10.1'
        tags:
            - 'v*'
    pull_request:
        branches:
            - '10.1'

jobs:
    test:
        name: Run Tests
        env:
            APP_ENV: test
            DATABASE_URL: mysql://root:root@127.0.0.1:3306/commsy_test
            ELASTICSEARCH_URL: http://127.0.0.1:9200/
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['8.0', '8.1']
        services:
            db:
                image: mariadb:10.6
                env:
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_DATABASE: commsy_test
                ports:
                    - 3306:3306
            elastic:
                image: elasticsearch:7.16.2
                ports:
                    - 9200:9200
                env:
                    discovery.type: single-node
                options: >-
                    --health-cmd "curl http://localhost:9200/_cluster/health"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 10

        steps:
            -   name: actions/checkout
                uses: actions/checkout@v2

            -   name: Setup node
                uses: actions/setup-node@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                    extensions: zip, imap, ldap, apcu
                    ini-values: apc.enable_cli=1, date.timezone=Europe/Berlin
                    tools: composer:v2

            -   name: Install yarn deps
                run: yarn install

            -   name: Install php deps
                run: composer install --no-progress

            -   name: Generate JWT keypair
                run: bin/console lexik:jwt:generate-keypair

            -   name: Build frontend package
                run: yarn build

            -   name: Run tests
                run: vendor/bin/codecept run --env github

    release-docker:
        name: Create and push docker images
        needs: test
        runs-on: ubuntu-latest
        steps:
            -   name: actions/checkout
                uses: actions/checkout@v3

            -   name: Login to DockerHub
                if: github.event_name != 'pull_request'
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            # PHP image
            -   name: docker/metadata-action
                uses: docker/metadata-action@v4
                id: meta_php
                with:
                    images: |
                        effectivewebwork/commsy
                    tags: |
                        type=ref,event=branch
                        type=ref,event=pr
                        type=semver,pattern={{major}}.{{minor}}
                    flavor: |
                        suffix=-php-fpm,onlatest=true

            -   name: Build php image and push
                uses: docker/build-push-action@v3
                with:
                    context: .
                    push: ${{ github.event_name != 'pull_request' }}
                    target: commsy_php
                    tags: ${{ steps.meta_php.outputs.tags }}
                    labels: ${{ steps.meta_php.outputs.labels }}

            # caddy image
            -   name: docker/metadata-action
                uses: docker/metadata-action@v4
                id: meta_caddy
                with:
                    images: |
                        effectivewebwork/commsy
                    tags: |
                        type=ref,event=branch
                        type=ref,event=pr
                        type=semver,pattern={{major}}.{{minor}}
                    flavor: |
                        suffix=-caddy,onlatest=true

            -   name: Build caddy image and push
                uses: docker/build-push-action@v2
                with:
                    context: .
                    push: ${{ github.event_name != 'pull_request' }}
                    target: commsy_caddy
                    tags: ${{ steps.meta_caddy.outputs.tags }}
                    labels: ${{ steps.meta_caddy.outputs.labels }}

            # elasticsearch image
            -   name: docker/metadata-action
                uses: docker/metadata-action@v4
                id: meta_elastic
                with:
                    images: |
                        effectivewebwork/commsy
                    tags: |
                        type=ref,event=branch
                        type=ref,event=pr
                        type=semver,pattern={{major}}.{{minor}}
                    flavor: |
                        suffix=-elastic,onlatest=true

            -   name: Build elasticsearch image and push
                uses: docker/build-push-action@v3
                with:
                    context: ./docker/elasticsearch
                    push: ${{ github.event_name != 'pull_request' }}
                    tags: ${{ steps.meta_elastic.outputs.tags }}
                    labels: ${{ steps.meta_elastic.outputs.labels }}

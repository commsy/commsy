name: CI

on:
    workflow_dispatch:
    push:
    pull_request:

jobs:
    test:
        name: Run Tests
        env:
            APP_ENV: test
            DATABASE_URL: mysql://root:root@127.0.0.1:3306/app
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['8.2']
        services:
            db:
                image: mariadb:10.11
                env:
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_DATABASE: app_test
                ports:
                    - 3306:3306
        steps:
            -   name: actions/checkout
                uses: actions/checkout@v4

            -   name: Setup node
                uses: actions/setup-node@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                    extensions: zip, imap, ldap, apcu
                    ini-values: apc.enable_cli=1, date.timezone=Europe/Berlin
                    tools: composer:v2

            -   name: Install php deps
                run: composer install --no-progress
                
            -   name: Generate JWT keypair
                run: bin/console lexik:jwt:generate-keypair

            -   name: Install yarn deps
                run: yarn install
                
            -   name: Build frontend package
                run: yarn build

            -   name: Run Unit tests
                run: vendor/bin/codecept run Unit --env github --debug

            -   name: Run Acceptance tests
                run: vendor/bin/codecept run Acceptance --env github

            -   name: Run Functional tests
                run: vendor/bin/codecept run Functional --env github

            -   name: Run Api tests
                run: vendor/bin/codecept run Api --env github

    release-docker:
        name: Create and push docker images
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: actions/checkout
              uses: actions/checkout@v4

            - name: Login to DockerHub
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            # PHP image
            - name: docker/metadata-action
              uses: docker/metadata-action@v5
              id: meta_php
              with:
                  images: |
                      effectivewebwork/commsy
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{major}}.{{minor}}
                  flavor: |
                      suffix=-php-fpm,onlatest=true

            - name: Build php image and push
              uses: docker/build-push-action@v3
              with:
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  target: commsy_php
                  tags: ${{ steps.meta_php.outputs.tags }}
                  labels: ${{ steps.meta_php.outputs.labels }}

            # caddy image
            - name: docker/metadata-action
              uses: docker/metadata-action@v4
              id: meta_caddy
              with:
                  images: |
                      effectivewebwork/commsy
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{major}}.{{minor}}
                  flavor: |
                      suffix=-caddy,onlatest=true

            - name: Build caddy image and push
              uses: docker/build-push-action@v2
              with:
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  target: commsy_caddy
                  tags: ${{ steps.meta_caddy.outputs.tags }}
                  labels: ${{ steps.meta_caddy.outputs.labels }}

            # elasticsearch image
            - name: docker/metadata-action
              uses: docker/metadata-action@v4
              id: meta_elastic
              with:
                  images: |
                      effectivewebwork/commsy
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{major}}.{{minor}}
                  flavor: |
                      suffix=-elastic,onlatest=true

            - name: Build elasticsearch image and push
              uses: docker/build-push-action@v3
              with:
                  context: ./docker/elasticsearch
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta_elastic.outputs.tags }}
                  labels: ${{ steps.meta_elastic.outputs.labels }}

{% extends 'CommsyBundle:Base:room.html.twig' %}

{% form_theme form 'CommsyBundle:Form:uikit_horizontal_dynamic_layout.html.twig' %}

{% block cover %}
    <div id="cover" class="uk-cover-background uk-position-relative cs-cover-background" aria-hidden="false">
        {% if bgImageFilepath is not empty %}
            <img src="{{ bgImageFilepath }}">
        {% endif %}

        <div class="uk-position-cover uk-grid cs-cover-grid">
            {# home information text #}
            <div class="uk-width-medium-2-3 cs-cover-height uk-margin-bottom">
                {% if roomItem.withInformationBox %}
                    <div class="uk-panel uk-panel-box cs-cover-grid-opacity " data-uk-parallax="{opacity: '0.5'}">
                        {{ homeInformationText | raw }}
                    </div>
                {% endif %}
            </div>

            {# announcements #}
            <div class="uk-width-medium-1-3 cs-cover-height">
                {% if countAnnouncements > 0 %}
                    <div class="uk-panel uk-panel-box cs-cover-grid-opacity" data-uk-parallax="{opacity: '0.5'}">
                        <ul id="announcements-feed" class="uk-comment-list" data-uk-observe>
                            {{ render(controller(
                                'CommsyBundle:Announcement:shortfeed',
                                { 'roomId': roomItem.itemId }
                            ))}}
                        </ul>
                    </div>    
                {% endif %}
            </div>
        </div>
    </div>
{% endblock %}


{% block content %}
    <div class="uk-grid">

        <div class="uk-width-medium-2-3">
            <div class="uk-panel uk-panel-box uk-panel-box-primary">
                <div class="uk-panel-teaser cs-panel-teaser-primary">
                    <div class="uk-flex uk-flex-middle uk-flex-space-between">
                        <div class="uk-text-large">{{ 'latest entries'|trans({}, "room") }}</div>
                     </div>
                </div>

                <div>
                    <ul id="room-feed" class="uk-comment-list">
                        {{ render(controller(
                            'CommsyBundle:Room:feed',
                            { 'roomId': roomItem.itemId }
                        ))}}
                    </ul>
                    <div class="feed-load-more" data-uk-scrollspy="{cls: 'uk-animation-fade', repeat: true, topoffset: 500}" data-feed='{"url": "{{ app.request.baseURL }}/room/{{ roomItem.itemId }}/feed/", "target": "#room-feed"}'>
                        <i class="uk-icon-refresh uk-icon-spin uk-icon-medium"></i>
                    </div>
                </div>
                
            </div>
        </div>
        
        {# sidebar #}
        <div class="uk-width-medium-1-3 cs-right-column">

            {# room information #}
            <div class="uk-panel uk-panel-box uk-panel-box-primary">
                <div class="uk-panel-teaser cs-panel-teaser-primary">
                    <div class="uk-clearfix">
                        <div class="uk-float-right">
                            <a href="#" class="button-toggle uk-button-mini uk-button-primary" data-uk-toggle="{target: '#room-info', animation: 'uk-animation-fade'}">
                                <i class="uk-icon-chevron-up"></i>
                            </a>
                        </div>
                        <div class="uk-text-large uk-float-left">
                            {{ 'Room-Information'|trans({}, "room") }}
                        </div>
                    </div>
                </div>
               
                <ul id="room-info" class="uk-list uk-list-striped">
                    {% if rss.show %}
                        <li>
                            <a href="{{ rss.url }}">
                                RSS <i class="uk-icon-rss uk-icon-small"></i>
                            </a>
                        </li>
                    {% endif %}
                    <li class="uk-flex">
                        <div class="uk-width-1-3">{{ 'Entries:'|trans({}, "room") }}</div>
                        <div class="uk-width-2-3">
                            {% transchoice numNewEntries with {'%days%': timeSpread, '%num%': numNewEntries} from "room" %}
                                One new entry in the last %days% days|%num% new entries in the last %days% days
                            {% endtranschoice %}
                        </div>
                    </li>
                    <li class="uk-flex">
                        <div class="uk-width-1-3">{{ 'Persons:'|trans({}, "room") }}</div>
                        <div class="uk-width-2-3">
                            {% trans with {'%total%': numTotalMember, '%active%': numActiveMember} from "room" %}
                                total %total% | active %active%
                            {% endtrans %}
                            <div class="uk-progress">
                                {% set activePercent = (numActiveMember/numTotalMember*100)|round %}
                                <div class="uk-progress-bar cs-progress-bar" style="width: {{ activePercent }}%;"></div>
                            </div>
                        </div>
                    </li>
                    <li  class="uk-flex">
                        <div class="uk-width-1-3">{% trans from "room" %}Page Impressions:{% endtrans %}</div>
                        <div class="uk-width-2-3">{{ pageImpressions }}</div>
                    </li>
                    <li  class="uk-flex uk-flex-column">
                        <div class="uk-flex">
                            <div class="uk-width-1-3">{{ 'Moderation:'|trans({}, "room") }}</div>
                            <div class="uk-width-2-3">
                                {% for roomModerator in roomModerators %}
                                    <a href="{{ path('commsy_user_detail', {'roomId': roomItem.itemId, 'itemId': roomModerator.itemId}) }}">{{ roomModerator.fullName }}</a>{% if not loop.last %}, {% endif %}
                                {% endfor %}
                                <br/>
                                <a id="cs-moderation-support-link" href="#" data-form-url="{{ path('commsy_room_moderationsupport', {'roomId': roomItem.itemId}) }}">{{ 'moderation support'|trans({}, "room") }}</a>
                            </div>
                        </div>
                        <div class="uk-flex">
                            <div id="cs-moderation-support-spinner" class="uk-margin-small-top uk-margin-small-bottom uk-container-center uk-hidden">
                                <i class="uk-icon-spinner uk-icon-small uk-icon-spin"></i>
                            </div>
                        </div>
                        <div class="uk-flex">
                            <div id="cs-moderation-support" class="uk-width-1-1 uk-hidden">
                            </div>
                        </div>
                    </li>
                </ul>
            </div>

            {# filter #}
            <div class="uk-panel uk-panel-box uk-panel-box-primary">
                <div class="uk-panel-teaser cs-panel-teaser-primary">
                    <div class="uk-clearfix">
                        <div class="uk-float-right">
                            <a href="#" class="button-toggle uk-button-mini uk-button-primary" data-uk-toggle="{target: '#list-filter', animation: 'uk-animation-fade'}">
                                <i class="uk-icon-chevron-up"></i>
                            </a>
                        </div>
                        <div class="uk-text-large uk-float-left">
                            {{ 'list filter'|trans({}, "room") }} 
                        </div>
                    </div>
                </div>
                <div id="list-filter">
                    {{ form_start(form) }}
                    {{ form_widget(form) }}
                    {{ form_end(form) }}
                </div>
 
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        let cover_width = $("#cover").width();
        let cover_height = $("#cover").height();

        let img_width = $("#cover img").width();
        let img_height = $("#cover img").height();

        // determines image height as imgHeight = coverHeight * heightFactor;
        let heightFactor = 1.2;

        // 1 => set 'margin-bottom' => parallax * 1
        // -1 => set 'margin-top' => parallax * -1, 
        // default: 1 (nicely fakes stereoscopic effect on panorama images! ;)
        // TODO: pass via parameter (perhaps let user choose direction?)
        let transDir = 1;
        let marginSelect = 'margin-top';
        if(transDir < 0) marginSelect = 'margin-bottom';

        if(img_width < cover_width){
            // scale image width to cover width
            img_width  *= (cover_width / img_width);
            img_height *= (cover_width / img_width);
        }
        if(img_height < cover_height*heightFactor){
            // scale image height to heightFactor * cover height
            img_width  *= ( (cover_height*heightFactor) / img_height );
            img_height *= ( (cover_height*heightFactor) / img_height );
        }

        img_width = parseInt(img_width);
        img_height = parseInt(img_height);

        $("#cover img").css({'width' : img_width, 'height' : img_height, 'max-width' : 'none'});

        let marginOffset = -1*(Math.abs(img_height - cover_height)/2);
        $("#cover img").css(marginSelect, marginOffset);

        // horizontically center image if its wider than the cover area
        if(img_width > cover_width){
            $("#cover img").css('margin-left', -1*(Math.abs(img_width - cover_width)/2));
        }

        // activate parallax scrolling
        if(window.innerHeight > img_height){
            $("#cover img").attr("data-uk-parallax", "{y: '"+(transDir * Math.abs(img_height - cover_height))+"'}");
        }

        window.onresize = function(e){
            let activated = typeof($("#cover img").attr('data-uk-parallax'));
            let heightDiff = this.innerHeight - img_height;
            if(heightDiff < 0 && activated !== 'undefined'){
                // FIXME: this does not seem to deactive the parallax scrolling effect!
                $("#cover img").removeAttr("data-uk-parallax");
            }
            else if(heightDiff >= 0 && activated === 'undefined'){
                $("#cover img").attr("data-uk-parallax", "{y: '"+(transDir * Math.abs(img_height - cover_height))+"'}");
            }
        }
    </script>
{% endblock %}

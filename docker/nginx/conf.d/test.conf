upstream php-upstream {
    server php:9001;
}

server {
    server_name _;
    root /var/www/html/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass php-upstream;

        # Increase the buffer size to handle large cache invalidation headers
        fastcgi_buffer_size 32k;
        fastcgi_buffers 32 4k;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param APP_ENV test;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    location ~ ^/commsy\.php(/|$) {
        if ($arg_fct = 'getfile') {
            rewrite ^ $scheme://$http_host/goto/$arg_iid? permanent;
        }

        if ($arg_iid) {
            rewrite ^ $scheme://$http_host/goto/$arg_iid? permanent;
        }
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

    client_max_body_size 50M;
}
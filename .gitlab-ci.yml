image: php:5.6

# Composer stores all downloaded packages in the vendor/ directory.
# Do not use the following if the vendor/ directory is commited to
# your git repository.
#cache:
#  paths:
#    - vendor/

before_script:
  # Install local packages
  - apt-get update -yqq
  - apt-get install -yqq libfreetype6-dev
  - apt-get install -yqq libjpeg62-turbo-dev
  - apt-get install -yqq libmcrypt-dev
  - apt-get install -yqq libpng12-dev
  - apt-get install -yqq zlib1g-dev
  - apt-get install -yqq libicu-dev
  - apt-get install -yqq libc-client-dev
  - apt-get install -yqq libkrb5-dev
  - apt-get install -yqq g++
  - apt-get install -yqq git
  - apt-get install -yqq zip

  # Install php extensions
  - docker-php-ext-install iconv mcrypt
  - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
  - docker-php-ext-install gd
  - docker-php-ext-configure intl
  - docker-php-ext-install intl
  - docker-php-ext-install mcrypt
  - docker-php-ext-install pdo_mysql
  - docker-php-ext-configure imap --with-kerberos --with-imap-ssl
  - docker-php-ext-install imap

  # Install phpunit, the tool that we will use for testing
  - curl -o /usr/local/bin/phpunit -L https://phar.phpunit.de/phpunit-5.7.phar
  - chmod +x /usr/local/bin/phpunit

  # Custom php configuration
  - 'echo "date.timezone = Europe/Berlin" > /usr/local/etc/php/conf.d/custom.ini'

  # Install Node.js
  - curl -sL https://deb.nodesource.com/setup_7.x | bash -
  - apt-get update -yqq && apt-get install -yqq nodejs

  # Install yarn
  - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
  - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
  - apt-get update -yqq && apt-get install -yqq yarn

  # Install global Node.js packages
  # (none yet)

services:
  - mariadb:latest

variables:
  # Configure mariadb service (https://hub.docker.com/_/mariadb/)
  MYSQL_DATABASE: commsy
  MYSQL_ROOT_PASSWORD: root
  MYSQL_USER: commsy
  MYSQL_PASSWORD: changeme

stages:
  - build
  - test
  - release

##########
## Jobs
##########

build:
  stage: build
  script:
    - cp legacy/etc/cs_config.php-dist legacy/etc/cs_config.php
    - cp app/config/parameters.yml.dist app/config/parameters.yml
    - 'sed -i "s/database_host:     127.0.0.1/database_host:     mariadb/" app/config/parameters.yml'
    - php composer.phar install --no-interaction
    - yarn install
    - yarn run encore production
  artifacts:
    expire_in: 1 week
    paths:
      - app/
      - bin/
      - files/
      - legacy/
      - src/
      - var/
      - vendor/
      - web/
      - LICENSE.md
      - README.md
      - VERSION

test:
  stage: test
  script:
    - phpunit
  dependencies:
    - build

release-commit:
  stage: release
  except:
    - tags
  script:
    - rm app/config/parameters.yml
  dependencies:
    - build
  artifacts:
    expire_in: 1 day
    name: "commsy_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}"
    paths:
      - app/
      - bin/
      - files/
      - legacy/
      - src/
      - var/
      - vendor/
      - web/
      - LICENSE.md
      - README.md
      - VERSION

release-tag:
  stage: release
  only:
    - tags
  script:
    - rm app/config/parameters.yml
  dependencies:
    - build
  artifacts:
    expire_in: 1 week
    name: "commsy_${CI_COMMIT_REF_NAME}"
    paths:
      - app/
      - bin/
      - files/
      - legacy/
      - src/
      - var/
      - vendor/
      - web/
      - LICENSE.md
      - README.md
      - VERSION
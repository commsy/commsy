<?xml version="1.0" encoding="UTF-8"?>

<project name="CommSy" default="build">

	<property environment="env" />
	<property name="project.workspace" value="${env.WORKSPACE}" />

	<target name="build" depends="prepare,composer,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit,js,post" />

	<target name="build-parallel" depends="prepare,composer,lint,tools-parallel,phpunit,js,post" />

	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="2">
			<sequential>
				<antcall target="pdepend" />
				<antcall target="phpmd-ci" />
			</sequential>

			<antcall target="phpcpd" />
			<antcall target="phpcs-ci" />
			<antcall target="phploc" />
			<antcall target="phpdox" />
		</parallel>
	</target>

	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${project.workspace}/build/api" />
		<delete dir="${project.workspace}/build/coverage" />
		<delete dir="${project.workspace}/build/logs" />
		<delete dir="${project.workspace}/build/pdepend" />
	</target>

	<target name="prepare" depends="clean" description="Prepare for build">
		<mkdir dir="${project.workspace}/build/api" />
		<mkdir dir="${project.workspace}/build/coverage" />
		<mkdir dir="${project.workspace}/build/logs" />
		<mkdir dir="${project.workspace}/build/pdepend" />
		<mkdir dir="${project.workspace}/build/phpdox" />
	</target>

	<target name="composer" description="Install composer dependencies">
		<exec dir="${project.workspace}" executable="php" failonerror="true">
			<arg value="composer.phar install">
			</arg>
		</exec>
	</target>

	<target name="lint" description="Perform syntax check of source files">
		<apply executable="php" failonerror="true">
			<arg value="-l">
			</arg>

			<fileset dir="${project.workspace}">
				<include name="**/*.php" />
				<exclude name="htdocs/js/**" />
				<modified />
			</fileset>
		</apply>
	</target>

	<target name="phploc" description="Measure project size using PHPLOC">
		<exec executable="phploc">
			<arg value="--count-tests" />
			<arg value="--log-csv" />
			<arg value="${project.workspace}/build/logs/phploc.csv" />
			<arg path="${project.workspace}" />
		</exec>
	</target>

	<target name="pdepend" description="Calculate software metrics using PHP_Depend">
		<exec executable="pdepend">
			<arg value="--jdepend-xml=${project.workspace}/build/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${project.workspace}/build/pdepend/dependencies.svg" />
			<arg value="--overview-pyramid=${project.workspace}/build/pdepend/overview-pyramid.svg" />
			<arg path="${project.workspace}" />
		</exec>
	</target>

	<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
		<exec executable="phpmd">
			<arg path="${project.workspace}" />
			<arg value="xml" />
			<arg value="${project.workspace}/build/phpmd.xml" />
			<arg value="--reportfile" />
			<arg value="${project.workspace}/build/logs/pmd.xml" />
		</exec>
	</target>

	<target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
		<exec executable="phpcs" output="/dev/null">
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${project.workspace}/build/logs/checkstyle.xml" />
			<arg value="--standard=${project.workspace}/build/phpcs.xml" />
			<arg path="${project.workspace}" />
		</exec>
	</target>

	<target name="phpcpd" description="Find duplicate code using PHPCPD">
		<exec executable="phpcpd">
			<arg value="--log-pmd" />
			<arg value="${project.workspace}/build/logs/pmd-cpd.xml" />
			<arg path="${project.workspace}" />
		</exec>
	</target>

	<target name="phpdox" description="Generate API documentation using phpDox">
		<exec executable="phpdox" />
	</target>

	<target name="phpunit" description="Run unit tests with PHPUnit">
		<exec executable="phpunit" failonerror="true" />
	</target>

	<target name="js">
		<echo>WORKSPACE: ${project.workspace}</echo>
		<chmod file="${project.workspace}/htdocs/js/src/util/buildscripts/build.sh" perm="u+x">
		</chmod>
		<exec dir="${project.workspace}/htdocs/js/" executable="./src/util/buildscripts/build.sh" failonerror="true">
			<arg value="--profile build.js">
			</arg>
		</exec>
	</target>

	<target name="post">
		<delete dir="${env.WORKSPACE}/.settings" />
		<delete file="${env.WORKSPACE}/.buildpath" />
		<delete file="${env.WORKSPACE}/.project" />
	</target>
</project>
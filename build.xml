<?xml version="1.0" encoding="UTF-8"?>

<project name="CommSy" default="build" basedir=".">
	<property name="source" value="." />

	<target name="build" depends="prepare,composer,lint,tools-parallel,phpunit,js,post" />

	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="2">
			<sequential>
				<antcall target="pdepend" />
				<antcall target="phpmd" />
			</sequential>

			<antcall target="phpcpd" />
			<antcall target="phpcs" />
			<antcall target="phploc" />
			<antcall target="phpdox" />
		</parallel>
	</target>

	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${basedir}/build/api" />
		<delete dir="${basedir}/build/coverage" />
		<delete dir="${basedir}/build/logs" />
		<delete dir="${basedir}/build/pdepend" />
		<delete dir="${basedir}/build/phpdox" />
	</target>

	<target name="prepare" depends="clean" description="Prepare for build">
		<mkdir dir="${basedir}/build/api" />
		<mkdir dir="${basedir}/build/coverage" />
		<mkdir dir="${basedir}/build/logs" />
		<mkdir dir="${basedir}/build/pdepend" />
		<mkdir dir="${basedir}/build/phpdox" />
	</target>

	<target name="composer" description="Install composer dependencies">
		<chmod file="${basedir}/composer.phar" perm="u+x" />
		<exec dir="${basedir}/" executable="./composer.phar" failonerror="true">
			<arg value="install" />
		</exec>
	</target>

	<target name="lint" description="Perform syntax check of source files">
		<apply executable="php" failonerror="true">
			<arg value="-l" />

			<fileset dir="${source}">
				<include name="**/*.php" />
				<exclude name="htdocs/js/**" />
				<modified />
			</fileset>
		</apply>
	</target>

	<target name="phploc" description="Measure project size using PHPLOC">
		<exec executable="phploc">
			<arg value="--count-tests" />
			<arg value="--log-csv" />
			<arg value="${basedir}/build/logs/phploc.csv" />
			<arg path="${source}" />
		</exec>
	</target>

	<target name="pdepend" description="Calculate software metrics using PHP_Depend">
		<exec executable="pdepend">
			<arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
			<arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
			<arg path="${source}" />
		</exec>
	</target>

	<target name="phpmd" description="Perform project mess detection using PHPMD">
		<exec executable="phpmd">
			<arg path="${source}" />
            <arg value="xml" />
            <arg value="${basedir}/build/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
		</exec>
	</target>

	<target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer">
		<exec executable="phpcs" output="/dev/null">
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
			<arg value="--standard=${basedir}/build/phpcs.xml" />
			<arg path="${source}" />
		</exec>
	</target>

	<target name="phpcpd" description="Find duplicate code using PHPCPD">
		<exec executable="phpcpd">
			<arg value="--log-pmd" />
			<arg value="${basedir}/build/logs/pmd-cpd.xml" />
			<arg path="${source}" />
		</exec>
	</target>

	<target name="phpdox" description="Generate API documentation using phpDox">
		<exec executable="phpdox" />
	</target>

	<target name="phpunit" description="Run unit tests with PHPUnit">
		<exec executable="phpunit" failonerror="true" />
	</target>

	<target name="js" description="Build Dojo source">
		<chmod file="${basedir}/htdocs/js/src/util/buildscripts/build.sh" perm="u+x" />
		<exec dir="${basedir}/htdocs/js/" executable="./src/util/buildscripts/build.sh" failonerror="true">
			<arg value="--profile build.js" />
		</exec>
	</target>

	<target name="post" description="Post processing">
		<delete dir="${basedir}/.settings" />
		<delete file="${basedir}/.buildpath" />
		<delete file="${basedir}/.project" />
	</target>
</project>
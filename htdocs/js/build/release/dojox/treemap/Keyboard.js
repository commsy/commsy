//>>built
define("dojox/treemap/Keyboard","dojo/_base/array,dojo/_base/lang,dojo/_base/event,dojo/_base/declare,dojo/on,dojo/keys,dojo/dom-attr,./_utils,dijit/_FocusMixin".split(","),function(i,j,k,n,m,a,o,p,q){return n("dojox.treemap.Keyboard",q,{tabIndex:"0",_setTabIndexAttr:"domNode",constructor:function(){},postCreate:function(){this.inherited(arguments);this._keyDownHandle=m(this.domNode,"keydown",j.hitch(this,this._onKeyDown));this._mouseDownHandle=m(this.domNode,"mousedown",j.hitch(this,this._onMouseDown))},
destroy:function(){this.inherited(arguments);this._keyDownHandle.remove();this._mouseDownHandle.remove()},createRenderer:function(a,d,h){var g=this.inherited(arguments);o.set(g,"tabindex","-1");return g},_onMouseDown:function(){this.domNode.focus()},_onKeyDown:function(c){var d=this.get("selectedItem");if(d){var h=this.itemToRenderer[this.getIdentity(d)],g=h.parentItem,f,b,l;if(c.keyCode!=a.UP_ARROW&&c.keyCode!=a.NUMPAD_MINUS&&c.keyCode!=a.NUMPAD_PLUS)if(f=c.keyCode==a.DOWN_ARROW?d.children:g.children)b=
p.initElements(f,j.hitch(this,this._computeAreaForItem)).elements,l=b[i.indexOf(f,d)],b.sort(function(a,b){return b.size-a.size});else return;var e;switch(c.keyCode){case a.LEFT_ARROW:e=f[b[Math.max(0,i.indexOf(b,l)-1)].index];break;case a.RIGHT_ARROW:e=f[b[Math.min(b.length-1,i.indexOf(b,l)+1)].index];break;case a.DOWN_ARROW:e=f[b[0].index];break;case a.UP_ARROW:e=g;break;case a.NUMPAD_PLUS:!this._isLeaf(d)&&this.drillDown&&(this.drillDown(h),k.stop(c));break;case a.NUMPAD_MINUS:!this._isLeaf(d)&&
this.drillUp&&(this.drillUp(h),k.stop(c))}e&&!this._isRoot(e)&&(this.set("selectedItem",e),k.stop(c))}}})});
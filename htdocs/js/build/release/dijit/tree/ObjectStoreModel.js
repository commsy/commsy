//>>built
define("dijit/tree/ObjectStoreModel",["dojo/_base/array","dojo/aspect","dojo/_base/declare","dojo/_base/lang","dojo/when"],function(g,i,h,c,f){return h("dijit.tree.ObjectStoreModel",null,{store:null,labelAttr:"name",root:null,query:null,constructor:function(a){c.mixin(this,a);this.childrenCache={}},destroy:function(){for(var a in this.childrenCache)this.childrenCache[a].close&&this.childrenCache[a].close()},getRoot:function(a,d){if(this.root)a(this.root);else{var e;f(e=this.store.query(this.query),
c.hitch(this,function(b){if(1!=b.length)throw Error("dijit.tree.ObjectStoreModel: root query returned "+b.length+" items, but must return exactly one");this.root=b[0];a(this.root);e.observe&&e.observe(c.hitch(this,function(a){this.onChange(a)}),!0)}),d)}},mayHaveChildren:function(){return!0},getChildren:function(a,d,e){var b=this.store.getIdentity(a);this.childrenCache[b]?f(this.childrenCache[b],d,e):f(this.childrenCache[b]=this.store.getChildren(a),c.hitch(this,function(b){b.observe&&b.observe(c.hitch(this,
function(d,e,c){this.onChange(d);if(e!=c)this.onChildrenChange(a,b)}),!0);d(b)}),e)},isItem:function(){return!0},fetchItemByIdentity:function(a){this.store.get(a.identity).then(c.hitch(a.scope,a.onItem),c.hitch(a.scope,a.onError))},getIdentity:function(a){return this.store.getIdentity(a)},getLabel:function(a){return a[this.labelAttr]},newItem:function(a,d,e,b){return this.store.put(a,{parent:d,before:b})},pasteItem:function(a,d,e,b,c,f){b||(b=[].concat(this.childrenCache[this.getIdentity(d)]),c=g.indexOf(b,
a),b.splice(c,1),this.onChildrenChange(d,b));return this.store.put(a,{overwrite:!0,parent:e,before:f})},onChange:function(){},onChildrenChange:function(){},onDelete:function(){}})});
//>>built
define("commsy/EditTree","dojo/_base/declare,dojo/dom-construct,dojo/io-query,commsy/tree,dojo/_base/lang,dijit/Dialog,cbtree/Tree,dijit/form/TextBox,dijit/form/Button,dojo/query,cbtree/models/ForestStoreModel,dojo/dom-attr,cbtree/CheckBox,dojo/on,dijit/tree/dndSource,cbtree/models/StoreModel-API,dojo/NodeList-traverse".split(","),function(l,i,r,m,c,s,n,t,u,k,o,f,p,h,q){return l(m,{textbox:null,dialog:null,button:null,constructor:function(){},createTree:function(){return new n({autoExpand:this.expanded,
model:this.model,showRoot:!0,persist:!1,dndController:q,betweenThreshold:5,checkBoxes:this.checkboxes,onClick:c.hitch(this,function(){}),widget:{type:p,args:{multiState:!0},mixin:function(a){a.value=this.item.item_id[0];a.name="form_data[tags]"}}})},createModel:function(){return new o({store:this.store,checkedAttr:"match",rootLabel:"",onChildrenChange:c.hitch(this,function(a,b){this.onChildrenChange(a,b)})})},setupTree:function(a,b){b=b||function(){};this.inherited(arguments,[a,c.hitch(this,function(){this.addCreateAndRenameToAllLabels();
h(this.store,"Set",c.hitch(this,function(a,b,c,f){this.onStoreSet(a,b,c,f)}));b(this)}),!0])},onChildrenChange:function(a,b){a.root&&this.AJAXRequest("tags","updateTreeRoots",{rootIds:dojo.map(b,c.hitch(this,function(a){return this.model.getItemAttr(a,"item_id")})),roomId:this.room_id},c.hitch(this,function(){}))},onStore:function(){},onStoreSet:function(a,b,e,d){"children"===b&&(a=this.model.getItemAttr(a,"item_id"),d=dojo.map(d,c.hitch(this,function(a){return this.model.getItemAttr(a,"item_id")})),
this.AJAXRequest("tags","updateTreeStructure",{parentId:a,children:d,roomId:this.room_id},c.hitch(this,function(){})))},createNewTreeEntry:function(a){var b=this.tree.model,e=b.fetchItem({item_id:a});this.createNewInputDialog(c.hitch(this,function(d){this.AJAXRequest("tags","createNewTag",{tagName:d,parentId:a,roomId:this.room_id},c.hitch(this,function(a){b.newItem({title:d,item_id:a.tagId,children:[]},e);this.addCreateAndRenameToAllLabels()}))}))},renameTagEntry:function(a){var b=this.tree.model,
e=b.fetchItem({item_id:a});this.createNewInputDialog(c.hitch(this,function(d){this.AJAXRequest("tags","renameTag",{newTagName:d,tagId:a},c.hitch(this,function(){b.setItemAttr(e,"title",d)}))}),b.getItemAttr(e,"title"))},deleteTagEntry:function(a){var b=this.tree.model,e=b.fetchItem({item_id:a});this.createNewDeleteDialog(c.hitch(this,function(){this.AJAXRequest("tags","deleteTag",{tagId:a},c.hitch(this,function(){b.deleteItem(e)}))}))},createNewInputDialog:function(a,b){this.textbox=new dijit.form.TextBox({value:b||
""});this.button=new dijit.form.Button({label:"Ok",onClick:c.hitch(this,function(){a(this.textbox.get("value"));this.dialog.destroyRecursive()})});this.dialog=new dijit.Dialog({title:"Name"});dojo.place(this.textbox.domNode,this.dialog.containerNode,"last");dojo.place(this.button.domNode,this.dialog.containerNode,"last");this.dialog.show()},createNewDeleteDialog:function(a){this.button=new dijit.form.Button({label:"L\u00f6schen",onClick:c.hitch(this,function(){a();this.dialog.destroyRecursive()})});
this.dialog=new dijit.Dialog({title:"L\u00f6schen"});dojo.place(this.button.domNode,this.dialog.containerNode,"last");this.dialog.show()},addCreateAndRenameToAllLabels:function(){dojo.forEach(k("div#popup_tabcontent span.dijitTreeLabel"),c.hitch(this,function(a){if(!k("a.nodeCreator",a.parentNode)[0]){var b=i.create("a",{className:"nodeCreator",href:"#",innerHTML:"| Erstellen"},a,"after");if("ROOT"!==f.get(a,"innerHTML")&&""!==f.get(a,"innerHTML"))var e=i.create("a",{className:"nodeCreator",href:"#",
innerHTML:" | Bearbeiten"},b,"after"),d=i.create("a",{className:"nodeCreator",href:"#",innerHTML:" | L\u00f6schen"},e,"after");var g=(new dojo.NodeList(b)).parents("div.dijitTreeNode")[0];if(g){var g=f.get(g,"widgetid"),g=dijit.byId(g),j=parseInt(this.tree.model.getItemAttr(g.item,"item_id"));h(b,"click",c.hitch(this,function(){this.createNewTreeEntry(j)}));"ROOT"!==f.get(a,"innerHTML")&&""!==f.get(a,"innerHTML")&&(h(e,"click",c.hitch(this,function(){this.renameTagEntry(j)})),h(d,"click",c.hitch(this,
function(){this.deleteTagEntry(j)})))}}}))}})});